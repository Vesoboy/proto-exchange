syntax = "proto3";

package user;

option go_package = "github.com/Vesoboy/proto-exchange;user";

// Определение сервиса
service ExchangeService {
    // Получение курсов обмена всех валют
    rpc GetExchangeRates(Empty) returns (ExchangeRatesResponse);
    
    // Получение курса обмена для конкретной валюты
    rpc GetExchangeRateForCurrency(CurrencyRequest) returns (ExchangeRateResponse);

    // Обмен валют
    rpc ExchangeCurrency(ExchangeRequest) returns (TransactionResponse);
}

// Auth сервиса
service Auth{
    // Регистрация пользователя
    rpc RegisterUser(RegisterRequest) returns (RegisterResponse);
    // Авторизация пользователя
    rpc LoginUser(LoginRequest) returns (LoginResponse);
}

// Финансовые операции (Баланс, пополнение, вывод)
service FinancialService {
    // Получение баланса пользователя
    rpc GetBalance(GetBalanceRequest) returns (BalanceResponse);
    
    // Пополнение счета
    rpc Deposit(DepositRequest) returns (TransactionResponse);

    // Вывод средств
    rpc Withdraw(WithdrawRequest) returns (TransactionResponse);
}

// Запрос для регистрации пользователя
message RegisterRequest{
    string username = 1;
    string email = 2;
    string password = 3;
}

// Ответ на запрос регистрации
message RegisterResponse {
    string message = 1;
}

// Запрос для авторизации пользователя
message LoginRequest {
    string email = 1;
    string password = 2;
}

// Ответ на запрос авторизации
message LoginResponse {
    string token = 1; // JWT токен
    string message = 2;
}

// Запрос на пополнение счета
message DepositRequest {
    string token = 1; // JWT токен
    float amount = 2; // Сумма для пополнения
}

// Запрос на вывод средств
message WithdrawRequest {
    string token = 1; // JWT токен
    float amount = 2; // Сумма для вывода
}

// Запрос на получение баланса пользователя
message GetBalanceRequest {
    string token = 1; // JWT токен
}

// Ответ с балансом пользователя
message BalanceResponse {
    float balance = 1;
}

// Запрос для получения курса обмена для конкретной валюты
message CurrencyRequest {
    string from_currency = 1;
    string to_currency = 2;
}

// Ответ с курсом обмена для конкретной валюты
message ExchangeRateResponse {
    string from_currency = 1;
    string to_currency = 2;
    float rate = 3;
}

// Ответ с курсами обмена всех валют
message ExchangeRatesResponse {
    map<string, float> rates = 1; // ключ: валюта, значение: курс
}

// Запрос на обмен валют
message ExchangeRequest {
    string from_currency = 1;
    string to_currency = 2;
    float amount = 3;
}

// Ответ на обмен валюты
message TransactionResponse {
    string message = 1;
    float new_balance = 2;
}

// Пустое сообщение
message Empty {}